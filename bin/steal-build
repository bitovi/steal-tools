#!/usr/bin/env node
var path = require("path");

global.steal = {
	nodeRequire: require,
	root: path.resolve(__dirname, "../..")
};

var program = require("commander"),
	steal = require("steal"),
	package = require("../package.json");

program.version(package.version)
	.usage("[options] <file ...>")
	.option("-o, --out [folder]", "Name of the application folder")
	.option("-d, --depth <n>", "Package depth", parseInt)
	.option("-c, --compressor [name]", "JavaScript compressor to use")
	.option("--no-minify", "Do not minify the output file")
	.option("--include-steal", "Package steal with the build")
	.option("-s, --standalone", "Build as standalone, without needing steal.")
  .option("--steal-dir [folder]", "Location of the steal directory.")
	.parse(process.argv);

// If no arguments are provided, show the help and exit.
if(!program.args.length) {
	program.help();
}

var inFile = program.args[0],
	outDirectory = program.out;
if(!outDirectory) {
	outDirectory = path.dirname(inFile);
}

steal("steal-tools/build",
	"steal-tools/build/pluginify",
	function(build, pluginify){

	var fun = program.standalone ? pluginify : build;

	fun(inFile, {
		to: outDirectory,
		depth: program.depth,
		compressor: program.compressor,
		minify: program.minify,
		packageSteal: !!program.includeSteal,
		stealDir: program.stealDir
	});

});
